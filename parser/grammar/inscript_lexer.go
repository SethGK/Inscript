// Code generated from grammar/Inscript.g4 by ANTLR 4.13.2. DO NOT EDIT.

package parser

import (
	"fmt"
	"github.com/antlr4-go/antlr/v4"
	"sync"
	"unicode"
)

// Suppress unused import error
var _ = fmt.Printf
var _ = sync.Once{}
var _ = unicode.IsLetter

type InscriptLexer struct {
	*antlr.BaseLexer
	channelNames []string
	modeNames    []string
	// TODO: EOF string
}

var InscriptLexerLexerStaticData struct {
	once                   sync.Once
	serializedATN          []int32
	ChannelNames           []string
	ModeNames              []string
	LiteralNames           []string
	SymbolicNames          []string
	RuleNames              []string
	PredictionContextCache *antlr.PredictionContextCache
	atn                    *antlr.ATN
	decisionToDFA          []*antlr.DFA
}

func inscriptlexerLexerInit() {
	staticData := &InscriptLexerLexerStaticData
	staticData.ChannelNames = []string{
		"DEFAULT_TOKEN_CHANNEL", "HIDDEN",
	}
	staticData.ModeNames = []string{
		"DEFAULT_MODE",
	}
	staticData.LiteralNames = []string{
		"", "'function'", "'if'", "'else'", "'while'", "'for'", "'in'", "'break'",
		"'continue'", "'return'", "'import'", "'print'", "'true'", "'false'",
		"'nil'", "'and'", "'or'", "'not'", "'^^'", "'+'", "'-'", "'*'", "'/'",
		"'//'", "'%'", "'&'", "'|'", "'^'", "'~'", "'<<'", "'>>'", "'=='", "'!='",
		"'<'", "'<='", "'>'", "'>='", "'='", "'+='", "'-='", "'*='", "'/='",
		"'^^='", "'->'", "'('", "')'", "'['", "']'", "'{'", "'}'", "','", "'.'",
		"':'", "'...'",
	}
	staticData.SymbolicNames = []string{
		"", "FUNCTION", "IF", "ELSE", "WHILE", "FOR", "IN", "BREAK", "CONTINUE",
		"RETURN", "IMPORT", "PRINT", "TRUE", "FALSE", "NIL", "AND", "OR", "NOT",
		"POW", "ADD", "SUB", "MUL", "DIV", "IDIV", "MOD", "BITAND", "BITOR",
		"BITXOR", "BITNOT", "SHL", "SHR", "EQ", "NEQ", "LT", "LE", "GT", "GE",
		"ASSIGN", "ADD_ASSIGN", "SUB_ASSIGN", "MUL_ASSIGN", "DIV_ASSIGN", "POW_ASSIGN",
		"ARROW", "LPAREN", "RPAREN", "LBRACK", "RBRACK", "LBRACE", "RBRACE",
		"COMMA", "DOT", "COLON", "ELLIPSIS", "IDENTIFIER", "NUMBER", "STRING",
		"COMMENT", "BLOCK_COMMENT", "NEWLINE", "WS",
	}
	staticData.RuleNames = []string{
		"FUNCTION", "IF", "ELSE", "WHILE", "FOR", "IN", "BREAK", "CONTINUE",
		"RETURN", "IMPORT", "PRINT", "TRUE", "FALSE", "NIL", "AND", "OR", "NOT",
		"POW", "ADD", "SUB", "MUL", "DIV", "IDIV", "MOD", "BITAND", "BITOR",
		"BITXOR", "BITNOT", "SHL", "SHR", "EQ", "NEQ", "LT", "LE", "GT", "GE",
		"ASSIGN", "ADD_ASSIGN", "SUB_ASSIGN", "MUL_ASSIGN", "DIV_ASSIGN", "POW_ASSIGN",
		"ARROW", "LPAREN", "RPAREN", "LBRACK", "RBRACK", "LBRACE", "RBRACE",
		"COMMA", "DOT", "COLON", "ELLIPSIS", "IDENTIFIER", "NUMBER", "STRING",
		"ESC_SEQ", "COMMENT", "BLOCK_COMMENT", "NEWLINE", "WS",
	}
	staticData.PredictionContextCache = antlr.NewPredictionContextCache()
	staticData.serializedATN = []int32{
		4, 0, 60, 407, 6, -1, 2, 0, 7, 0, 2, 1, 7, 1, 2, 2, 7, 2, 2, 3, 7, 3, 2,
		4, 7, 4, 2, 5, 7, 5, 2, 6, 7, 6, 2, 7, 7, 7, 2, 8, 7, 8, 2, 9, 7, 9, 2,
		10, 7, 10, 2, 11, 7, 11, 2, 12, 7, 12, 2, 13, 7, 13, 2, 14, 7, 14, 2, 15,
		7, 15, 2, 16, 7, 16, 2, 17, 7, 17, 2, 18, 7, 18, 2, 19, 7, 19, 2, 20, 7,
		20, 2, 21, 7, 21, 2, 22, 7, 22, 2, 23, 7, 23, 2, 24, 7, 24, 2, 25, 7, 25,
		2, 26, 7, 26, 2, 27, 7, 27, 2, 28, 7, 28, 2, 29, 7, 29, 2, 30, 7, 30, 2,
		31, 7, 31, 2, 32, 7, 32, 2, 33, 7, 33, 2, 34, 7, 34, 2, 35, 7, 35, 2, 36,
		7, 36, 2, 37, 7, 37, 2, 38, 7, 38, 2, 39, 7, 39, 2, 40, 7, 40, 2, 41, 7,
		41, 2, 42, 7, 42, 2, 43, 7, 43, 2, 44, 7, 44, 2, 45, 7, 45, 2, 46, 7, 46,
		2, 47, 7, 47, 2, 48, 7, 48, 2, 49, 7, 49, 2, 50, 7, 50, 2, 51, 7, 51, 2,
		52, 7, 52, 2, 53, 7, 53, 2, 54, 7, 54, 2, 55, 7, 55, 2, 56, 7, 56, 2, 57,
		7, 57, 2, 58, 7, 58, 2, 59, 7, 59, 2, 60, 7, 60, 1, 0, 1, 0, 1, 0, 1, 0,
		1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 2, 1, 2, 1, 2, 1, 2,
		1, 2, 1, 3, 1, 3, 1, 3, 1, 3, 1, 3, 1, 3, 1, 4, 1, 4, 1, 4, 1, 4, 1, 5,
		1, 5, 1, 5, 1, 6, 1, 6, 1, 6, 1, 6, 1, 6, 1, 6, 1, 7, 1, 7, 1, 7, 1, 7,
		1, 7, 1, 7, 1, 7, 1, 7, 1, 7, 1, 8, 1, 8, 1, 8, 1, 8, 1, 8, 1, 8, 1, 8,
		1, 9, 1, 9, 1, 9, 1, 9, 1, 9, 1, 9, 1, 9, 1, 10, 1, 10, 1, 10, 1, 10, 1,
		10, 1, 10, 1, 11, 1, 11, 1, 11, 1, 11, 1, 11, 1, 12, 1, 12, 1, 12, 1, 12,
		1, 12, 1, 12, 1, 13, 1, 13, 1, 13, 1, 13, 1, 14, 1, 14, 1, 14, 1, 14, 1,
		15, 1, 15, 1, 15, 1, 16, 1, 16, 1, 16, 1, 16, 1, 17, 1, 17, 1, 17, 1, 18,
		1, 18, 1, 19, 1, 19, 1, 20, 1, 20, 1, 21, 1, 21, 1, 22, 1, 22, 1, 22, 1,
		23, 1, 23, 1, 24, 1, 24, 1, 25, 1, 25, 1, 26, 1, 26, 1, 27, 1, 27, 1, 28,
		1, 28, 1, 28, 1, 29, 1, 29, 1, 29, 1, 30, 1, 30, 1, 30, 1, 31, 1, 31, 1,
		31, 1, 32, 1, 32, 1, 33, 1, 33, 1, 33, 1, 34, 1, 34, 1, 35, 1, 35, 1, 35,
		1, 36, 1, 36, 1, 37, 1, 37, 1, 37, 1, 38, 1, 38, 1, 38, 1, 39, 1, 39, 1,
		39, 1, 40, 1, 40, 1, 40, 1, 41, 1, 41, 1, 41, 1, 41, 1, 42, 1, 42, 1, 42,
		1, 43, 1, 43, 1, 44, 1, 44, 1, 45, 1, 45, 1, 46, 1, 46, 1, 47, 1, 47, 1,
		48, 1, 48, 1, 49, 1, 49, 1, 50, 1, 50, 1, 51, 1, 51, 1, 52, 1, 52, 1, 52,
		1, 52, 1, 53, 1, 53, 5, 53, 306, 8, 53, 10, 53, 12, 53, 309, 9, 53, 1,
		54, 4, 54, 312, 8, 54, 11, 54, 12, 54, 313, 1, 54, 1, 54, 4, 54, 318, 8,
		54, 11, 54, 12, 54, 319, 3, 54, 322, 8, 54, 1, 55, 1, 55, 1, 55, 5, 55,
		327, 8, 55, 10, 55, 12, 55, 330, 9, 55, 1, 55, 1, 55, 1, 55, 1, 55, 5,
		55, 336, 8, 55, 10, 55, 12, 55, 339, 9, 55, 1, 55, 1, 55, 1, 55, 1, 55,
		1, 55, 1, 55, 5, 55, 347, 8, 55, 10, 55, 12, 55, 350, 9, 55, 1, 55, 1,
		55, 1, 55, 1, 55, 1, 55, 1, 55, 1, 55, 1, 55, 5, 55, 360, 8, 55, 10, 55,
		12, 55, 363, 9, 55, 1, 55, 1, 55, 1, 55, 3, 55, 368, 8, 55, 1, 56, 1, 56,
		1, 56, 1, 57, 1, 57, 5, 57, 375, 8, 57, 10, 57, 12, 57, 378, 9, 57, 1,
		57, 1, 57, 1, 58, 1, 58, 1, 58, 1, 58, 5, 58, 386, 8, 58, 10, 58, 12, 58,
		389, 9, 58, 1, 58, 1, 58, 1, 58, 1, 58, 1, 58, 1, 59, 4, 59, 397, 8, 59,
		11, 59, 12, 59, 398, 1, 60, 4, 60, 402, 8, 60, 11, 60, 12, 60, 403, 1,
		60, 1, 60, 3, 348, 361, 387, 0, 61, 1, 1, 3, 2, 5, 3, 7, 4, 9, 5, 11, 6,
		13, 7, 15, 8, 17, 9, 19, 10, 21, 11, 23, 12, 25, 13, 27, 14, 29, 15, 31,
		16, 33, 17, 35, 18, 37, 19, 39, 20, 41, 21, 43, 22, 45, 23, 47, 24, 49,
		25, 51, 26, 53, 27, 55, 28, 57, 29, 59, 30, 61, 31, 63, 32, 65, 33, 67,
		34, 69, 35, 71, 36, 73, 37, 75, 38, 77, 39, 79, 40, 81, 41, 83, 42, 85,
		43, 87, 44, 89, 45, 91, 46, 93, 47, 95, 48, 97, 49, 99, 50, 101, 51, 103,
		52, 105, 53, 107, 54, 109, 55, 111, 56, 113, 0, 115, 57, 117, 58, 119,
		59, 121, 60, 1, 0, 8, 3, 0, 65, 90, 95, 95, 97, 122, 4, 0, 48, 57, 65,
		90, 95, 95, 97, 122, 1, 0, 48, 57, 4, 0, 10, 10, 13, 13, 34, 34, 92, 92,
		4, 0, 10, 10, 13, 13, 39, 39, 92, 92, 7, 0, 34, 34, 39, 39, 92, 92, 98,
		98, 110, 110, 114, 114, 116, 116, 2, 0, 10, 10, 13, 13, 2, 0, 9, 9, 32,
		32, 422, 0, 1, 1, 0, 0, 0, 0, 3, 1, 0, 0, 0, 0, 5, 1, 0, 0, 0, 0, 7, 1,
		0, 0, 0, 0, 9, 1, 0, 0, 0, 0, 11, 1, 0, 0, 0, 0, 13, 1, 0, 0, 0, 0, 15,
		1, 0, 0, 0, 0, 17, 1, 0, 0, 0, 0, 19, 1, 0, 0, 0, 0, 21, 1, 0, 0, 0, 0,
		23, 1, 0, 0, 0, 0, 25, 1, 0, 0, 0, 0, 27, 1, 0, 0, 0, 0, 29, 1, 0, 0, 0,
		0, 31, 1, 0, 0, 0, 0, 33, 1, 0, 0, 0, 0, 35, 1, 0, 0, 0, 0, 37, 1, 0, 0,
		0, 0, 39, 1, 0, 0, 0, 0, 41, 1, 0, 0, 0, 0, 43, 1, 0, 0, 0, 0, 45, 1, 0,
		0, 0, 0, 47, 1, 0, 0, 0, 0, 49, 1, 0, 0, 0, 0, 51, 1, 0, 0, 0, 0, 53, 1,
		0, 0, 0, 0, 55, 1, 0, 0, 0, 0, 57, 1, 0, 0, 0, 0, 59, 1, 0, 0, 0, 0, 61,
		1, 0, 0, 0, 0, 63, 1, 0, 0, 0, 0, 65, 1, 0, 0, 0, 0, 67, 1, 0, 0, 0, 0,
		69, 1, 0, 0, 0, 0, 71, 1, 0, 0, 0, 0, 73, 1, 0, 0, 0, 0, 75, 1, 0, 0, 0,
		0, 77, 1, 0, 0, 0, 0, 79, 1, 0, 0, 0, 0, 81, 1, 0, 0, 0, 0, 83, 1, 0, 0,
		0, 0, 85, 1, 0, 0, 0, 0, 87, 1, 0, 0, 0, 0, 89, 1, 0, 0, 0, 0, 91, 1, 0,
		0, 0, 0, 93, 1, 0, 0, 0, 0, 95, 1, 0, 0, 0, 0, 97, 1, 0, 0, 0, 0, 99, 1,
		0, 0, 0, 0, 101, 1, 0, 0, 0, 0, 103, 1, 0, 0, 0, 0, 105, 1, 0, 0, 0, 0,
		107, 1, 0, 0, 0, 0, 109, 1, 0, 0, 0, 0, 111, 1, 0, 0, 0, 0, 115, 1, 0,
		0, 0, 0, 117, 1, 0, 0, 0, 0, 119, 1, 0, 0, 0, 0, 121, 1, 0, 0, 0, 1, 123,
		1, 0, 0, 0, 3, 132, 1, 0, 0, 0, 5, 135, 1, 0, 0, 0, 7, 140, 1, 0, 0, 0,
		9, 146, 1, 0, 0, 0, 11, 150, 1, 0, 0, 0, 13, 153, 1, 0, 0, 0, 15, 159,
		1, 0, 0, 0, 17, 168, 1, 0, 0, 0, 19, 175, 1, 0, 0, 0, 21, 182, 1, 0, 0,
		0, 23, 188, 1, 0, 0, 0, 25, 193, 1, 0, 0, 0, 27, 199, 1, 0, 0, 0, 29, 203,
		1, 0, 0, 0, 31, 207, 1, 0, 0, 0, 33, 210, 1, 0, 0, 0, 35, 214, 1, 0, 0,
		0, 37, 217, 1, 0, 0, 0, 39, 219, 1, 0, 0, 0, 41, 221, 1, 0, 0, 0, 43, 223,
		1, 0, 0, 0, 45, 225, 1, 0, 0, 0, 47, 228, 1, 0, 0, 0, 49, 230, 1, 0, 0,
		0, 51, 232, 1, 0, 0, 0, 53, 234, 1, 0, 0, 0, 55, 236, 1, 0, 0, 0, 57, 238,
		1, 0, 0, 0, 59, 241, 1, 0, 0, 0, 61, 244, 1, 0, 0, 0, 63, 247, 1, 0, 0,
		0, 65, 250, 1, 0, 0, 0, 67, 252, 1, 0, 0, 0, 69, 255, 1, 0, 0, 0, 71, 257,
		1, 0, 0, 0, 73, 260, 1, 0, 0, 0, 75, 262, 1, 0, 0, 0, 77, 265, 1, 0, 0,
		0, 79, 268, 1, 0, 0, 0, 81, 271, 1, 0, 0, 0, 83, 274, 1, 0, 0, 0, 85, 278,
		1, 0, 0, 0, 87, 281, 1, 0, 0, 0, 89, 283, 1, 0, 0, 0, 91, 285, 1, 0, 0,
		0, 93, 287, 1, 0, 0, 0, 95, 289, 1, 0, 0, 0, 97, 291, 1, 0, 0, 0, 99, 293,
		1, 0, 0, 0, 101, 295, 1, 0, 0, 0, 103, 297, 1, 0, 0, 0, 105, 299, 1, 0,
		0, 0, 107, 303, 1, 0, 0, 0, 109, 311, 1, 0, 0, 0, 111, 367, 1, 0, 0, 0,
		113, 369, 1, 0, 0, 0, 115, 372, 1, 0, 0, 0, 117, 381, 1, 0, 0, 0, 119,
		396, 1, 0, 0, 0, 121, 401, 1, 0, 0, 0, 123, 124, 5, 102, 0, 0, 124, 125,
		5, 117, 0, 0, 125, 126, 5, 110, 0, 0, 126, 127, 5, 99, 0, 0, 127, 128,
		5, 116, 0, 0, 128, 129, 5, 105, 0, 0, 129, 130, 5, 111, 0, 0, 130, 131,
		5, 110, 0, 0, 131, 2, 1, 0, 0, 0, 132, 133, 5, 105, 0, 0, 133, 134, 5,
		102, 0, 0, 134, 4, 1, 0, 0, 0, 135, 136, 5, 101, 0, 0, 136, 137, 5, 108,
		0, 0, 137, 138, 5, 115, 0, 0, 138, 139, 5, 101, 0, 0, 139, 6, 1, 0, 0,
		0, 140, 141, 5, 119, 0, 0, 141, 142, 5, 104, 0, 0, 142, 143, 5, 105, 0,
		0, 143, 144, 5, 108, 0, 0, 144, 145, 5, 101, 0, 0, 145, 8, 1, 0, 0, 0,
		146, 147, 5, 102, 0, 0, 147, 148, 5, 111, 0, 0, 148, 149, 5, 114, 0, 0,
		149, 10, 1, 0, 0, 0, 150, 151, 5, 105, 0, 0, 151, 152, 5, 110, 0, 0, 152,
		12, 1, 0, 0, 0, 153, 154, 5, 98, 0, 0, 154, 155, 5, 114, 0, 0, 155, 156,
		5, 101, 0, 0, 156, 157, 5, 97, 0, 0, 157, 158, 5, 107, 0, 0, 158, 14, 1,
		0, 0, 0, 159, 160, 5, 99, 0, 0, 160, 161, 5, 111, 0, 0, 161, 162, 5, 110,
		0, 0, 162, 163, 5, 116, 0, 0, 163, 164, 5, 105, 0, 0, 164, 165, 5, 110,
		0, 0, 165, 166, 5, 117, 0, 0, 166, 167, 5, 101, 0, 0, 167, 16, 1, 0, 0,
		0, 168, 169, 5, 114, 0, 0, 169, 170, 5, 101, 0, 0, 170, 171, 5, 116, 0,
		0, 171, 172, 5, 117, 0, 0, 172, 173, 5, 114, 0, 0, 173, 174, 5, 110, 0,
		0, 174, 18, 1, 0, 0, 0, 175, 176, 5, 105, 0, 0, 176, 177, 5, 109, 0, 0,
		177, 178, 5, 112, 0, 0, 178, 179, 5, 111, 0, 0, 179, 180, 5, 114, 0, 0,
		180, 181, 5, 116, 0, 0, 181, 20, 1, 0, 0, 0, 182, 183, 5, 112, 0, 0, 183,
		184, 5, 114, 0, 0, 184, 185, 5, 105, 0, 0, 185, 186, 5, 110, 0, 0, 186,
		187, 5, 116, 0, 0, 187, 22, 1, 0, 0, 0, 188, 189, 5, 116, 0, 0, 189, 190,
		5, 114, 0, 0, 190, 191, 5, 117, 0, 0, 191, 192, 5, 101, 0, 0, 192, 24,
		1, 0, 0, 0, 193, 194, 5, 102, 0, 0, 194, 195, 5, 97, 0, 0, 195, 196, 5,
		108, 0, 0, 196, 197, 5, 115, 0, 0, 197, 198, 5, 101, 0, 0, 198, 26, 1,
		0, 0, 0, 199, 200, 5, 110, 0, 0, 200, 201, 5, 105, 0, 0, 201, 202, 5, 108,
		0, 0, 202, 28, 1, 0, 0, 0, 203, 204, 5, 97, 0, 0, 204, 205, 5, 110, 0,
		0, 205, 206, 5, 100, 0, 0, 206, 30, 1, 0, 0, 0, 207, 208, 5, 111, 0, 0,
		208, 209, 5, 114, 0, 0, 209, 32, 1, 0, 0, 0, 210, 211, 5, 110, 0, 0, 211,
		212, 5, 111, 0, 0, 212, 213, 5, 116, 0, 0, 213, 34, 1, 0, 0, 0, 214, 215,
		5, 94, 0, 0, 215, 216, 5, 94, 0, 0, 216, 36, 1, 0, 0, 0, 217, 218, 5, 43,
		0, 0, 218, 38, 1, 0, 0, 0, 219, 220, 5, 45, 0, 0, 220, 40, 1, 0, 0, 0,
		221, 222, 5, 42, 0, 0, 222, 42, 1, 0, 0, 0, 223, 224, 5, 47, 0, 0, 224,
		44, 1, 0, 0, 0, 225, 226, 5, 47, 0, 0, 226, 227, 5, 47, 0, 0, 227, 46,
		1, 0, 0, 0, 228, 229, 5, 37, 0, 0, 229, 48, 1, 0, 0, 0, 230, 231, 5, 38,
		0, 0, 231, 50, 1, 0, 0, 0, 232, 233, 5, 124, 0, 0, 233, 52, 1, 0, 0, 0,
		234, 235, 5, 94, 0, 0, 235, 54, 1, 0, 0, 0, 236, 237, 5, 126, 0, 0, 237,
		56, 1, 0, 0, 0, 238, 239, 5, 60, 0, 0, 239, 240, 5, 60, 0, 0, 240, 58,
		1, 0, 0, 0, 241, 242, 5, 62, 0, 0, 242, 243, 5, 62, 0, 0, 243, 60, 1, 0,
		0, 0, 244, 245, 5, 61, 0, 0, 245, 246, 5, 61, 0, 0, 246, 62, 1, 0, 0, 0,
		247, 248, 5, 33, 0, 0, 248, 249, 5, 61, 0, 0, 249, 64, 1, 0, 0, 0, 250,
		251, 5, 60, 0, 0, 251, 66, 1, 0, 0, 0, 252, 253, 5, 60, 0, 0, 253, 254,
		5, 61, 0, 0, 254, 68, 1, 0, 0, 0, 255, 256, 5, 62, 0, 0, 256, 70, 1, 0,
		0, 0, 257, 258, 5, 62, 0, 0, 258, 259, 5, 61, 0, 0, 259, 72, 1, 0, 0, 0,
		260, 261, 5, 61, 0, 0, 261, 74, 1, 0, 0, 0, 262, 263, 5, 43, 0, 0, 263,
		264, 5, 61, 0, 0, 264, 76, 1, 0, 0, 0, 265, 266, 5, 45, 0, 0, 266, 267,
		5, 61, 0, 0, 267, 78, 1, 0, 0, 0, 268, 269, 5, 42, 0, 0, 269, 270, 5, 61,
		0, 0, 270, 80, 1, 0, 0, 0, 271, 272, 5, 47, 0, 0, 272, 273, 5, 61, 0, 0,
		273, 82, 1, 0, 0, 0, 274, 275, 5, 94, 0, 0, 275, 276, 5, 94, 0, 0, 276,
		277, 5, 61, 0, 0, 277, 84, 1, 0, 0, 0, 278, 279, 5, 45, 0, 0, 279, 280,
		5, 62, 0, 0, 280, 86, 1, 0, 0, 0, 281, 282, 5, 40, 0, 0, 282, 88, 1, 0,
		0, 0, 283, 284, 5, 41, 0, 0, 284, 90, 1, 0, 0, 0, 285, 286, 5, 91, 0, 0,
		286, 92, 1, 0, 0, 0, 287, 288, 5, 93, 0, 0, 288, 94, 1, 0, 0, 0, 289, 290,
		5, 123, 0, 0, 290, 96, 1, 0, 0, 0, 291, 292, 5, 125, 0, 0, 292, 98, 1,
		0, 0, 0, 293, 294, 5, 44, 0, 0, 294, 100, 1, 0, 0, 0, 295, 296, 5, 46,
		0, 0, 296, 102, 1, 0, 0, 0, 297, 298, 5, 58, 0, 0, 298, 104, 1, 0, 0, 0,
		299, 300, 5, 46, 0, 0, 300, 301, 5, 46, 0, 0, 301, 302, 5, 46, 0, 0, 302,
		106, 1, 0, 0, 0, 303, 307, 7, 0, 0, 0, 304, 306, 7, 1, 0, 0, 305, 304,
		1, 0, 0, 0, 306, 309, 1, 0, 0, 0, 307, 305, 1, 0, 0, 0, 307, 308, 1, 0,
		0, 0, 308, 108, 1, 0, 0, 0, 309, 307, 1, 0, 0, 0, 310, 312, 7, 2, 0, 0,
		311, 310, 1, 0, 0, 0, 312, 313, 1, 0, 0, 0, 313, 311, 1, 0, 0, 0, 313,
		314, 1, 0, 0, 0, 314, 321, 1, 0, 0, 0, 315, 317, 5, 46, 0, 0, 316, 318,
		7, 2, 0, 0, 317, 316, 1, 0, 0, 0, 318, 319, 1, 0, 0, 0, 319, 317, 1, 0,
		0, 0, 319, 320, 1, 0, 0, 0, 320, 322, 1, 0, 0, 0, 321, 315, 1, 0, 0, 0,
		321, 322, 1, 0, 0, 0, 322, 110, 1, 0, 0, 0, 323, 328, 5, 34, 0, 0, 324,
		327, 3, 113, 56, 0, 325, 327, 8, 3, 0, 0, 326, 324, 1, 0, 0, 0, 326, 325,
		1, 0, 0, 0, 327, 330, 1, 0, 0, 0, 328, 326, 1, 0, 0, 0, 328, 329, 1, 0,
		0, 0, 329, 331, 1, 0, 0, 0, 330, 328, 1, 0, 0, 0, 331, 368, 5, 34, 0, 0,
		332, 337, 5, 39, 0, 0, 333, 336, 3, 113, 56, 0, 334, 336, 8, 4, 0, 0, 335,
		333, 1, 0, 0, 0, 335, 334, 1, 0, 0, 0, 336, 339, 1, 0, 0, 0, 337, 335,
		1, 0, 0, 0, 337, 338, 1, 0, 0, 0, 338, 340, 1, 0, 0, 0, 339, 337, 1, 0,
		0, 0, 340, 368, 5, 39, 0, 0, 341, 342, 5, 34, 0, 0, 342, 343, 5, 34, 0,
		0, 343, 344, 5, 34, 0, 0, 344, 348, 1, 0, 0, 0, 345, 347, 9, 0, 0, 0, 346,
		345, 1, 0, 0, 0, 347, 350, 1, 0, 0, 0, 348, 349, 1, 0, 0, 0, 348, 346,
		1, 0, 0, 0, 349, 351, 1, 0, 0, 0, 350, 348, 1, 0, 0, 0, 351, 352, 5, 34,
		0, 0, 352, 353, 5, 34, 0, 0, 353, 368, 5, 34, 0, 0, 354, 355, 5, 39, 0,
		0, 355, 356, 5, 39, 0, 0, 356, 357, 5, 39, 0, 0, 357, 361, 1, 0, 0, 0,
		358, 360, 9, 0, 0, 0, 359, 358, 1, 0, 0, 0, 360, 363, 1, 0, 0, 0, 361,
		362, 1, 0, 0, 0, 361, 359, 1, 0, 0, 0, 362, 364, 1, 0, 0, 0, 363, 361,
		1, 0, 0, 0, 364, 365, 5, 39, 0, 0, 365, 366, 5, 39, 0, 0, 366, 368, 5,
		39, 0, 0, 367, 323, 1, 0, 0, 0, 367, 332, 1, 0, 0, 0, 367, 341, 1, 0, 0,
		0, 367, 354, 1, 0, 0, 0, 368, 112, 1, 0, 0, 0, 369, 370, 5, 92, 0, 0, 370,
		371, 7, 5, 0, 0, 371, 114, 1, 0, 0, 0, 372, 376, 5, 35, 0, 0, 373, 375,
		8, 6, 0, 0, 374, 373, 1, 0, 0, 0, 375, 378, 1, 0, 0, 0, 376, 374, 1, 0,
		0, 0, 376, 377, 1, 0, 0, 0, 377, 379, 1, 0, 0, 0, 378, 376, 1, 0, 0, 0,
		379, 380, 6, 57, 0, 0, 380, 116, 1, 0, 0, 0, 381, 382, 5, 47, 0, 0, 382,
		383, 5, 42, 0, 0, 383, 387, 1, 0, 0, 0, 384, 386, 9, 0, 0, 0, 385, 384,
		1, 0, 0, 0, 386, 389, 1, 0, 0, 0, 387, 388, 1, 0, 0, 0, 387, 385, 1, 0,
		0, 0, 388, 390, 1, 0, 0, 0, 389, 387, 1, 0, 0, 0, 390, 391, 5, 42, 0, 0,
		391, 392, 5, 47, 0, 0, 392, 393, 1, 0, 0, 0, 393, 394, 6, 58, 0, 0, 394,
		118, 1, 0, 0, 0, 395, 397, 7, 6, 0, 0, 396, 395, 1, 0, 0, 0, 397, 398,
		1, 0, 0, 0, 398, 396, 1, 0, 0, 0, 398, 399, 1, 0, 0, 0, 399, 120, 1, 0,
		0, 0, 400, 402, 7, 7, 0, 0, 401, 400, 1, 0, 0, 0, 402, 403, 1, 0, 0, 0,
		403, 401, 1, 0, 0, 0, 403, 404, 1, 0, 0, 0, 404, 405, 1, 0, 0, 0, 405,
		406, 6, 60, 0, 0, 406, 122, 1, 0, 0, 0, 16, 0, 307, 313, 319, 321, 326,
		328, 335, 337, 348, 361, 367, 376, 387, 398, 403, 1, 6, 0, 0,
	}
	deserializer := antlr.NewATNDeserializer(nil)
	staticData.atn = deserializer.Deserialize(staticData.serializedATN)
	atn := staticData.atn
	staticData.decisionToDFA = make([]*antlr.DFA, len(atn.DecisionToState))
	decisionToDFA := staticData.decisionToDFA
	for index, state := range atn.DecisionToState {
		decisionToDFA[index] = antlr.NewDFA(state, index)
	}
}

// InscriptLexerInit initializes any static state used to implement InscriptLexer. By default the
// static state used to implement the lexer is lazily initialized during the first call to
// NewInscriptLexer(). You can call this function if you wish to initialize the static state ahead
// of time.
func InscriptLexerInit() {
	staticData := &InscriptLexerLexerStaticData
	staticData.once.Do(inscriptlexerLexerInit)
}

// NewInscriptLexer produces a new lexer instance for the optional input antlr.CharStream.
func NewInscriptLexer(input antlr.CharStream) *InscriptLexer {
	InscriptLexerInit()
	l := new(InscriptLexer)
	l.BaseLexer = antlr.NewBaseLexer(input)
	staticData := &InscriptLexerLexerStaticData
	l.Interpreter = antlr.NewLexerATNSimulator(l, staticData.atn, staticData.decisionToDFA, staticData.PredictionContextCache)
	l.channelNames = staticData.ChannelNames
	l.modeNames = staticData.ModeNames
	l.RuleNames = staticData.RuleNames
	l.LiteralNames = staticData.LiteralNames
	l.SymbolicNames = staticData.SymbolicNames
	l.GrammarFileName = "Inscript.g4"
	// TODO: l.EOF = antlr.TokenEOF

	return l
}

// InscriptLexer tokens.
const (
	InscriptLexerFUNCTION      = 1
	InscriptLexerIF            = 2
	InscriptLexerELSE          = 3
	InscriptLexerWHILE         = 4
	InscriptLexerFOR           = 5
	InscriptLexerIN            = 6
	InscriptLexerBREAK         = 7
	InscriptLexerCONTINUE      = 8
	InscriptLexerRETURN        = 9
	InscriptLexerIMPORT        = 10
	InscriptLexerPRINT         = 11
	InscriptLexerTRUE          = 12
	InscriptLexerFALSE         = 13
	InscriptLexerNIL           = 14
	InscriptLexerAND           = 15
	InscriptLexerOR            = 16
	InscriptLexerNOT           = 17
	InscriptLexerPOW           = 18
	InscriptLexerADD           = 19
	InscriptLexerSUB           = 20
	InscriptLexerMUL           = 21
	InscriptLexerDIV           = 22
	InscriptLexerIDIV          = 23
	InscriptLexerMOD           = 24
	InscriptLexerBITAND        = 25
	InscriptLexerBITOR         = 26
	InscriptLexerBITXOR        = 27
	InscriptLexerBITNOT        = 28
	InscriptLexerSHL           = 29
	InscriptLexerSHR           = 30
	InscriptLexerEQ            = 31
	InscriptLexerNEQ           = 32
	InscriptLexerLT            = 33
	InscriptLexerLE            = 34
	InscriptLexerGT            = 35
	InscriptLexerGE            = 36
	InscriptLexerASSIGN        = 37
	InscriptLexerADD_ASSIGN    = 38
	InscriptLexerSUB_ASSIGN    = 39
	InscriptLexerMUL_ASSIGN    = 40
	InscriptLexerDIV_ASSIGN    = 41
	InscriptLexerPOW_ASSIGN    = 42
	InscriptLexerARROW         = 43
	InscriptLexerLPAREN        = 44
	InscriptLexerRPAREN        = 45
	InscriptLexerLBRACK        = 46
	InscriptLexerRBRACK        = 47
	InscriptLexerLBRACE        = 48
	InscriptLexerRBRACE        = 49
	InscriptLexerCOMMA         = 50
	InscriptLexerDOT           = 51
	InscriptLexerCOLON         = 52
	InscriptLexerELLIPSIS      = 53
	InscriptLexerIDENTIFIER    = 54
	InscriptLexerNUMBER        = 55
	InscriptLexerSTRING        = 56
	InscriptLexerCOMMENT       = 57
	InscriptLexerBLOCK_COMMENT = 58
	InscriptLexerNEWLINE       = 59
	InscriptLexerWS            = 60
)
